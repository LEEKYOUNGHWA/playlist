name: Deploy to Oracle VM

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: leekyounghwa/playlist
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/leekyounghwa/playlist:latest
          file: ./Dockerfile
          secrets: |
            "YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}"
            "YOUTUBE_PLAYLIST_ID=${{ secrets.YOUTUBE_PLAYLIST_ID }}"

      - name: Deploy to Oracle VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ORACLE_VM_IP }}
          username: "ubuntu"
          key: ${{ secrets.ORACLE_SSH_KEY }}
          script: |
            # 필요한 환경 변수들을 서버 환경에 설정
            # Docker Compose가 이 변수들을 인식하게 됨
            export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            export YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}
            export YOUTUBE_PLAYLIST_ID=${{ secrets.YOUTUBE_PLAYLIST_ID }}
            
            cd /home/ubuntu/playlist
            
            # Docker 이미지 pull
            export IMAGE_NAME=ghcr.io/leekyounghwa/playlist:latest
            sudo docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            sudo docker-compose pull
            
            # Docker 컨테이너 재시작
            sudo docker-compose up -d --force-recreate